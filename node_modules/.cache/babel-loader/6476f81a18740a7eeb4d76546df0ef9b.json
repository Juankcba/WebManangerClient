{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\node\\\\Royal\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\src\\\\components\\\\tareas\\\\FormTarea.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n  //Extraer si un proyecto esta activo\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext;\n  const tareasContext = useContext(tareaContext);\n  const {\n    tareaseleccionada,\n    errortarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    limpiarTarea\n  } = tareasContext; //effect que detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaseleccionada]); //state dle formulario\n\n  const [tarea, guardarTarea] = useState({\n    producto: '',\n    nombre: ''\n  }); //extrae el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea;\n  const {\n    comentario\n  } = tarea; //si no hay proyecto selecionado \n\n  if (!proyecto) return null; //array para destructuring y extrae el proyecto actual\n\n  const [proyectoActual] = proyecto; //leer los valores del formulario\n\n  const hadleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar\n\n    if (nombre.trim() === '') {\n      validarTarea();\n      return;\n    } //revisar si es edicion o nueva tarea \n\n\n    if (tareaseleccionada === null) {\n      //agregar la nueva tarea al state de tareas\n      tarea.proyecto = proyectoActual._id; //tarea.estado= false;\n\n      agregarTarea(tarea);\n    } else {\n      // actualizar tarea existe \n      actualizarTarea(tarea); //elimina tarea seleccionada del state\n\n      limpiarTarea();\n    } //obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); //reiniciar el form \n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Acciones...\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: hadleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-submit btn-block\",\n    value: tareaseleccionada ? 'Editar Pedido' : 'Agregar Pedido',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), errortarea ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, \"El nombre del local es obligatorio\") : null);\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/node/Royal/WebManangerServer/cliente/WebManangerClient/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","producto","comentario","proyectoActual","hadleChange","e","target","name","value","onSubmit","preventDefault","trim","_id","id"],"mappings":"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","sourcesContent":["import React,{useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n//Extraer si un proyecto esta activo\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {proyecto} = proyectosContext;\r\nconst tareasContext = useContext(tareaContext);\r\nconst {tareaseleccionada, errortarea, agregarTarea,validarTarea,obtenerTareas,actualizarTarea,limpiarTarea} = tareasContext;\r\n//effect que detecta si hay una tarea seleccionada\r\n\r\nuseEffect(() => {\r\n    if(tareaseleccionada !== null){\r\n        guardarTarea(tareaseleccionada);\r\n    } else {\r\n        guardarTarea({\r\n            nombre: '',\r\n            \r\n            \r\n        })\r\n    }\r\n}, [tareaseleccionada]);\r\n\r\n//state dle formulario\r\n\r\nconst[tarea,guardarTarea] = useState({\r\n\r\n    producto: '',\r\n            nombre: '',\r\n            \r\n})\r\n//extrae el nombre del proyecto\r\n\r\nconst {nombre} = tarea;\r\nconst {comentario} = tarea; \r\n //si no hay proyecto selecionado \r\n if(!proyecto) return null;\r\n\r\n //array para destructuring y extrae el proyecto actual\r\n const [proyectoActual] = proyecto;\r\n\r\n //leer los valores del formulario\r\n\r\n const hadleChange = e => {\r\n     guardarTarea({\r\n         ...tarea,\r\n         [e.target.name] : e.target.value\r\n     })\r\n }\r\n\r\n const onSubmit = e => {\r\n     e.preventDefault();\r\n     //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n     \r\n     //revisar si es edicion o nueva tarea \r\n     if(tareaseleccionada === null){\r\n         //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            //tarea.estado= false;\r\n            agregarTarea(tarea);\r\n     } else {\r\n         // actualizar tarea existe \r\n         actualizarTarea(tarea);\r\n         //elimina tarea seleccionada del state\r\n         limpiarTarea();\r\n     }\r\n    \r\n\r\n     //obtener y filtrar las tareas del proyecto actual\r\n     obtenerTareas(proyectoActual.id);\r\n     //reiniciar el form \r\n     guardarTarea({\r\n        nombre: '',\r\n        \r\n\r\n     })\r\n }\r\n    return (  \r\n        <div className=\"formulario\">            \r\n        <form onSubmit= {onSubmit}>\r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Acciones...\"\r\n                    name=\"nombre\"\r\n                    value= {nombre}\r\n                    onChange = {hadleChange}\r\n                    />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-submit btn-block\"\r\n                    value={tareaseleccionada ? 'Editar Pedido' : 'Agregar Pedido'}\r\n                    />\r\n\r\n            </div>\r\n        </form>\r\n        {errortarea ? <p className= \"mensaje error\">El nombre del local es obligatorio</p> : null }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}