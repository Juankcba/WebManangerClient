{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\IntercomBL\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n  //obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; //state para proyecto\n\n  const [proyecto, guardarProyecto] = useState({\n    nombre: ''\n  }); //Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; //lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; //cuando el usuario envia el proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); //validar el proyecto\n\n    if (nombre === '') {\n      mostrarError();\n      return;\n    } //agregar el state\n\n\n    agregarProyecto(proyecto); //reinicar el form \n\n    guardarProyecto({\n      nombre: ''\n    });\n  }; //mostar formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Nueva Sala\"), formulario ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre de la Sala\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Sala\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })) : null, errorformulario ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }\n  }, \"El Nombre de la Sala es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["C:/Users/Asus/Documents/GitHub/IntercomBL/WebManangerServer/cliente/WebManangerClient/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAOC,aAAa,GAAG,MAAM;AAEzB;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAACC,eAAD,CAAnC;AACA,QAAM;AAACG,IAAAA,UAAD;AAAYC,IAAAA,eAAZ;AAA4BC,IAAAA,iBAA5B;AAA+CC,IAAAA,eAA/C;AAA+DC,IAAAA;AAA/D,MAA+EL,gBAArF,CAJyB,CAMzB;;AAEA,QAAM,CAACM,QAAD,EAAWC,eAAX,IAA8BX,QAAQ,CAAC;AACzCY,IAAAA,MAAM,EAAE;AADiC,GAAD,CAA5C,CARyB,CAYzB;;AACA,QAAM;AAACA,IAAAA;AAAD,MAAWF,QAAjB,CAbyB,CAezB;;AACA,QAAMG,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,eAAe,CAAC,EACZ,GAAGD,QADS;AAEZ,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAf;AAIH,GALD,CAhByB,CAuBzB;;;AACA,QAAMC,gBAAgB,GAAGJ,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACK,cAAF,GAD0B,CAG1B;;AACA,QAAGP,MAAM,KAAK,EAAd,EAAiB;AACbH,MAAAA,YAAY;AACZ;AACH,KAPyB,CAQ1B;;;AACAD,IAAAA,eAAe,CAACE,QAAD,CAAf,CAT0B,CAU1B;;AACAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,MAAM,EAAE;AADI,KAAD,CAAf;AAGH,GAdD,CAxByB,CAuCzB;;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5Bb,IAAAA,iBAAiB;AACpB,GAFD;;AAGA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,OAAO,EAAGa,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAQIf,UAAU,gBAIN;AACA,IAAA,SAAS,EAAE,2BADX;AAEA,IAAA,QAAQ,EAAEa,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,SAAS,EAAC,YAFV;AAGA,IAAA,WAAW,EAAC,mBAHZ;AAIA,IAAA,IAAI,EAAC,QAJL;AAKA,IAAA,KAAK,EAAEN,MALP;AAMA,IAAA,QAAQ,EAAGC,gBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAYI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,4BAFV;AAGA,IAAA,KAAK,EAAE,cAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAJM,GAuBN,IA/BR,EAkCCP,eAAe,gBAAG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAH,GAA0E,IAlC1F,CADJ;AAsCH,CAjFD;;AAmFA,eAAeH,aAAf","sourcesContent":["import React,{Fragment,useState, useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst  NuevoProyecto = () => {\r\n\r\n    //obtener el state del formulario\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {formulario,errorformulario,mostrarFormulario, agregarProyecto,mostrarError} = proyectosContext;\r\n\r\n    //state para proyecto\r\n\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    //Extraer nombre de proyecto\r\n    const {nombre} = proyecto;\r\n\r\n    //lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario envia el proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        //validar el proyecto\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n        //agregar el state\r\n        agregarProyecto(proyecto);\r\n        //reinicar el form \r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n    //mostar formulario\r\n    const onClickFormulario = () => {\r\n        mostrarFormulario();\r\n    }\r\n    return (  \r\n        <Fragment>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\"\r\n            onClick={ onClickFormulario}\r\n        >Nueva Sala</button>\r\n\r\n        {\r\n            formulario \r\n            ?\r\n            (\r\n                \r\n                <form\r\n                className= \"formulario-nuevo-proyecto\"\r\n                onSubmit={onSubmitProyecto}\r\n                >\r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre de la Sala\"\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    onChange ={onChangeProyecto}\r\n                    ></input>\r\n                    <input \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primario btn-block\"\r\n                    value= \"Agregar Sala\">\r\n                    </input>\r\n                </form>\r\n\r\n            ) : null\r\n\r\n        }\r\n        {errorformulario ? <p className=\"mensaje error\">El Nombre de la Sala es obligatorio</p> : null}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NuevoProyecto ;"]},"metadata":{},"sourceType":"module"}