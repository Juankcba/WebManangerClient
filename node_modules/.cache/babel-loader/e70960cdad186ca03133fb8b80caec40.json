{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\node\\\\basico\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types'; //import {v4 as uuid} from 'uuid';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n  const initialState = {\n    /*  tareas: [\r\n          {id:1, nombre: 'Director', estado: true, proyectoId: 1},\r\n          {id:2,nombre: 'Camara', estado: true, proyectoId: 2},\r\n          {id:3,nombre: 'Tom', estado: true, proyectoId: 3},\r\n          {id:4,nombre: 'Asistente', estado: false, proyectoId: 4}\r\n      ],*/\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; //crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); // Crear las Funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //agregar una tarea al proyecto\n\n\n  const agregarTarea = async tarea => {\n    // tarea.id = uuid();\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //valida y muesta un error\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //eliminar tarea por id \n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //edita o modifica una tarea\n\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // extrae la tarea para edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //elimina la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      //  tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/node/basico/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","type","payload","data","tareas","error","console","log","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","_id","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,\r\n        VALIDAR_TAREA,ELIMINAR_TAREA,\r\n        TAREA_ACTUAL,\r\n        ACTUALIZAR_TAREA, LIMPIAR_TAREA\r\n\r\n} from '../../types';\r\n//import {v4 as uuid} from 'uuid';\r\nimport clienteAxios from '../../config/axios'\r\nconst TareaState = props => {\r\n\r\n    const initialState = {\r\n      /*  tareas: [\r\n            {id:1, nombre: 'Director', estado: true, proyectoId: 1},\r\n            {id:2,nombre: 'Camara', estado: true, proyectoId: 2},\r\n            {id:3,nombre: 'Tom', estado: true, proyectoId: 3},\r\n            {id:4,nombre: 'Asistente', estado: false, proyectoId: 4}\r\n        ],*/\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada : null\r\n    }\r\n\r\n\r\n    //crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n    // Crear las Funciones\r\n\r\n    //Obtener las tareas de un proyecto\r\n\r\n    const obtenerTareas = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{params: {proyecto}});\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //agregar una tarea al proyecto\r\n    const agregarTarea = async tarea => {\r\n       // tarea.id = uuid();\r\n       try {\r\n           const resultado = await clienteAxios.post('/api/tareas',tarea);\r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: resultado.data.tarea\r\n        })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n        \r\n    }\r\n\r\n    //valida y muesta un error\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea por id \r\n    const eliminarTarea = async (id,proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`,{params:{proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n     //edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n        \r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\r\n            \r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n        }) \r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n}\r\n    // extrae la tarea para edicion\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n  \r\n    //elimina la tarea seleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n              //  tareas: state.tareas,\r\n                tareasproyecto : state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;\r\n\r\n"]},"metadata":{},"sourceType":"module"}