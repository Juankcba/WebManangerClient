{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\IntercomBL\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\IntercomBL\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\IntercomBL\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import proyectoContext from'../../context/proyectos/proyectoContext';import tareaContext from'../../context/tareas/tareaContext';var FormTarea=function FormTarea(){//Extraer si un proyecto esta activo\nvar proyectosContext=useContext(proyectoContext);var proyecto=proyectosContext.proyecto;var tareasContext=useContext(tareaContext);var tareaseleccionada=tareasContext.tareaseleccionada,errortarea=tareasContext.errortarea,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,obtenerTareas=tareasContext.obtenerTareas,actualizarTarea=tareasContext.actualizarTarea,limpiarTarea=tareasContext.limpiarTarea;//effect que detecta si hay una tarea seleccionada\nuseEffect(function(){if(tareaseleccionada!==null){guardarTarea(tareaseleccionada);}else{guardarTarea({nombre:''});}},[tareaseleccionada]);//state dle formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],guardarTarea=_useState2[1];//extrae el nombre del proyecto\nvar nombre=tarea.nombre;//si no hay proyecto selecionado \nif(!proyecto)return null;//array para destructuring y extrae el proyecto actual\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];//leer los valores del formulario\nvar hadleChange=function hadleChange(e){guardarTarea(_objectSpread(_objectSpread({},tarea),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();//validar\nif(nombre.trim()===''){validarTarea();return;}//revisar si es edicion o nueva tarea \nif(tareaseleccionada===null){//agregar la nueva tarea al state de tareas\ntarea.proyecto=proyectoActual._id;//tarea.estado= false;\nagregarTarea(tarea);}else{// actualizar tarea existe \nactualizarTarea(tarea);//elimina tarea seleccionada del state\nlimpiarTarea();}//obtener y filtrar las tareas del proyecto actual\nobtenerTareas(proyectoActual.id);//reiniciar el form \nguardarTarea({nombre:''});};return/*#__PURE__*/React.createElement(\"div\",{className:\"formulario\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"Nombre Dispositivo...\",name:\"nombre\",value:nombre,onChange:hadleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primario btn-submit btn-block\",value:tareaseleccionada?'Editar Dispositivo':'Agregar Dispositivo'}))),errortarea?/*#__PURE__*/React.createElement(\"p\",{className:\"mensaje error\"},\"El nombre del dispositivo es obligatorio\"):null);};export default FormTarea;","map":{"version":3,"sources":["C:/Users/Asus/Documents/GitHub/IntercomBL/WebManangerServer/cliente/WebManangerClient/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","hadleChange","e","target","name","value","onSubmit","preventDefault","trim","_id","id"],"mappings":"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","sourcesContent":["import React,{useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n//Extraer si un proyecto esta activo\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {proyecto} = proyectosContext;\r\nconst tareasContext = useContext(tareaContext);\r\nconst {tareaseleccionada, errortarea, agregarTarea,validarTarea,obtenerTareas,actualizarTarea,limpiarTarea} = tareasContext;\r\n//effect que detecta si hay una tarea seleccionada\r\n\r\nuseEffect(() => {\r\n    if(tareaseleccionada !== null){\r\n        guardarTarea(tareaseleccionada);\r\n    } else {\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n}, [tareaseleccionada]);\r\n\r\n//state dle formulario\r\n\r\nconst[tarea,guardarTarea] = useState({\r\n\r\n    nombre: ''\r\n})\r\n//extrae el nombre del proyecto\r\n\r\nconst {nombre} = tarea;\r\n //si no hay proyecto selecionado \r\n if(!proyecto) return null;\r\n\r\n //array para destructuring y extrae el proyecto actual\r\n const [proyectoActual] = proyecto;\r\n\r\n //leer los valores del formulario\r\n\r\n const hadleChange = e => {\r\n     guardarTarea({\r\n         ...tarea,\r\n         [e.target.name] : e.target.value\r\n     })\r\n }\r\n\r\n const onSubmit = e => {\r\n     e.preventDefault();\r\n     //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n     \r\n     //revisar si es edicion o nueva tarea \r\n     if(tareaseleccionada === null){\r\n         //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            //tarea.estado= false;\r\n            agregarTarea(tarea);\r\n     } else {\r\n         // actualizar tarea existe \r\n         actualizarTarea(tarea);\r\n         //elimina tarea seleccionada del state\r\n         limpiarTarea();\r\n     }\r\n    \r\n\r\n     //obtener y filtrar las tareas del proyecto actual\r\n     obtenerTareas(proyectoActual.id);\r\n     //reiniciar el form \r\n     guardarTarea({\r\n         nombre: ''\r\n     })\r\n }\r\n    return (  \r\n        <div className=\"formulario\">            \r\n        <form onSubmit= {onSubmit}>\r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre Dispositivo...\"\r\n                    name=\"nombre\"\r\n                    value= {nombre}\r\n                    onChange = {hadleChange}\r\n                    />\r\n            </div>\r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-submit btn-block\"\r\n                    value={tareaseleccionada ? 'Editar Dispositivo' : 'Agregar Dispositivo'}\r\n                    />\r\n\r\n            </div>\r\n        </form>\r\n        {errortarea ? <p className= \"mensaje error\">El nombre del dispositivo es obligatorio</p> : null }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}