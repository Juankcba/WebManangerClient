{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\node\\\\basico\\\\cliente\\\\src\\\\context\\\\proyectos\\\\proyectoState.js\";\nimport React, { useReducer } from 'react'; //import {v4 as uuid} from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  /*\r\n      const proyectos = [\r\n          {id:1, nombre: 'Estudio1'},\r\n          {id:2, nombre: 'MASTER CH 10'},\r\n          {id:3, nombre: 'TOM'}\r\n      ]*/\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //obtner proyectos \n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Agregar nuevo Proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    /* proyecto.id = uuid();\r\n     \r\n     */\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      console.log(resultado); //INsertar el proyecto en el state \n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //VALIDAR EL FORMULARIO\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //selecciona el proyecto que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Eliminar un proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/node/basico/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","console","log","agregarProyecto","post","mostrarError","proyectoActual","proyectoId","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\n//import {v4 as uuid} from 'uuid';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {FORMULARIO_PROYECTO,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO\r\n    } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\nconst ProyectoState = props => {\r\n/*\r\n    const proyectos = [\r\n        {id:1, nombre: 'Estudio1'},\r\n        {id:2, nombre: 'MASTER CH 10'},\r\n        {id:3, nombre: 'TOM'}\r\n    ]*/\r\n    const initialState = {\r\n         proyectos : [\r\n            \r\n        ],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        proyecto: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n    //serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    //obtner proyectos \r\n    const obtenerProyectos= async () => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n        \r\n    }\r\n    //Agregar nuevo Proyecto\r\n    const agregarProyecto = async proyecto => {\r\n       /* proyecto.id = uuid();\r\n        \r\n        */\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            //INsertar el proyecto en el state \r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //VALIDAR EL FORMULARIO\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n    //selecciona el proyecto que el usuario dio click\r\n    const proyectoActual= proyectoId => \r\n    {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n    //Eliminar un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <proyectoContext.Provider\r\n        value={{\r\n            proyectos: state.proyectos,\r\n            formulario: state.formulario,\r\n            errorformulario: state.errorformulario,\r\n            proyecto: state.proyecto,\r\n            mostrarFormulario,\r\n            obtenerProyectos,\r\n            agregarProyecto,\r\n            mostrarError,\r\n            proyectoActual,\r\n            eliminarProyecto\r\n        }}>\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}