{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\node\\\\basico\\\\cliente\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = props => {\n  // extraer los valores del context \n  const alertaContext = useContext(AlertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = alertaContext;\n  const authContext = useContext(AuthContext);\n  const {\n    mensaje,\n    autenticado,\n    iniciarSesion\n  } = authContext; //en caso que el password o el usuario no exista\n\n  useEffect(() => {\n    /* if(autenticado){\r\n         props.history.push('/proyecto')\r\n     }*/\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n  }, [mensaje, autenticado, props.history]); //state para iniciar sesion\n\n  const [usuario, guardarUsuario] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = usuario;\n\n  const onChange = e => {\n    guardarUsuario({ ...usuario,\n      [e.target.name]: e.target.value\n    });\n  }; //cuando el usuario quiere iniciar sesion\n\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar que no haya campos vacios\n\n    if (email.trim() === '' || password.trim() === '') {\n      mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n    } //Pasarlo al action\n\n\n    iniciarSesion({\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, alerta ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `alerta ${alerta.categoria}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }, alerta.msg, \" \") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-form sombra-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }\n  }, \"Iniciar Sesi\\xF3n\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Tu Email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Tu Password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: 'nueva-cuenta',\n    className: \"enlace-cuenta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }\n  }, \"Obtener Cuenta\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/node/basico/cliente/src/components/auth/Login.js"],"names":["React","useContext","useState","useEffect","Link","AlertaContext","AuthContext","Login","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","msg","categoria","history","usuario","guardarUsuario","email","password","onChange","e","target","name","value","onSubmit","preventDefault","trim"],"mappings":"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","sourcesContent":["import React, {useContext,useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n     // extraer los valores del context \r\n     const alertaContext = useContext(AlertaContext);\r\n     const {alerta, mostrarAlerta} = alertaContext;\r\n \r\n     const authContext = useContext(AuthContext);\r\n     const {mensaje, autenticado, iniciarSesion} = authContext;\r\n    //en caso que el password o el usuario no exista\r\n     useEffect(() =>{\r\n       /* if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }*/\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const { email, password } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\r\n        }\r\n        //Pasarlo al action\r\n        iniciarSesion({email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Iniciar Sesión</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   >\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Iniciar Sesión\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'nueva-cuenta'} className=\"enlace-cuenta\">\r\n                       Obtener Cuenta\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}