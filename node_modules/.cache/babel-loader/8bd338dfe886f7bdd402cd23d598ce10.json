{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\node\\\\Royal\\\\WebManangerServer\\\\cliente\\\\WebManangerClient\\\\src\\\\components\\\\auth\\\\NuevaCuenta.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = props => {\n  // extraer los valores del context \n  const alertaContext = useContext(AlertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = alertaContext;\n  const authContext = useContext(AuthContext);\n  const {\n    mensaje,\n    autenticado,\n    registrarUsuario\n  } = authContext; //en caso que haya un registro duplicado\n\n  useEffect(() => {\n    if (autenticado) {\n      props.history.push('/proyecto');\n    }\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    } // eslint-disable-next-line\n\n  }, [mensaje, autenticado, props.history]); //state para iniciar sesion\n\n  const [usuario, guardarUsuario] = useState({\n    nombre: '',\n    email: '',\n    password: '',\n    confirmar: ''\n  });\n  const {\n    nombre,\n    email,\n    password,\n    confirmar\n  } = usuario;\n\n  const onChange = e => {\n    guardarUsuario({ ...usuario,\n      [e.target.name]: e.target.value\n    });\n  }; //cuando el usuario quiere iniciar sesion\n\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar que no haya campos vacios\n\n    if (nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '') {\n      mostrarAlerta('Todos los Campos son obligarios', 'alerta-error');\n      return;\n    } //password minimo\n\n\n    if (password.length < 6) {\n      mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n      return;\n    } //los 2 password sean iguales\n\n\n    if (password !== confirmar) {\n      mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n      return;\n    } //Pasarlo al action\n\n\n    registrarUsuario({\n      nombre,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, alerta ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `alerta ${alerta.categoria}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }\n  }, alerta.msg, \" \") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-form sombra-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }, \"Obtener una cuenta\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 28\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"nombre\",\n    name: \"nombre\",\n    placeholder: \"Tu nombre\",\n    value: nombre,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Tu Email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Tu Password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 28\n    }\n  }, \"Confirmar Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"confirmar\",\n    placeholder: \"Repite tu Password\",\n    value: confirmar,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Registrarme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: 'Login',\n    className: \"enlace-cuenta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 20\n    }\n  }, \"Volver a Iniciar Sesion\")));\n};\n\nexport default NuevaCuenta;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/node/Royal/WebManangerServer/cliente/WebManangerClient/src/components/auth/NuevaCuenta.js"],"names":["React","useState","useContext","useEffect","Link","AlertaContext","AuthContext","NuevaCuenta","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","registrarUsuario","history","push","msg","categoria","usuario","guardarUsuario","nombre","email","password","confirmar","onChange","e","target","name","value","onSubmit","preventDefault","trim","length"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect}  from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // extraer los valores del context \r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n\r\n    //en caso que haya un registro duplicado\r\n    useEffect(() =>{\r\n        if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    });\r\n\r\n    const {nombre, email, password, confirmar } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n        if(nombre.trim() === '' || email.trim() === '' ||\r\n        password.trim() === '' || confirmar.trim() === '' ){\r\n            mostrarAlerta('Todos los Campos son obligarios','alerta-error');\r\n            return;\r\n        }\r\n        //password minimo\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres','alerta-error');\r\n            return;\r\n        }\r\n        //los 2 password sean iguales\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Los passwords no son iguales','alerta-error');\r\n            return;\r\n\r\n        }\r\n\r\n        //Pasarlo al action\r\n        registrarUsuario({nombre,email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Obtener una cuenta</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   ><div className=\"campo-form\">\r\n                           <label htmlFor=\"nombre\">Nombre</label>\r\n                           <input \r\n                                type=\"text\"\r\n                                id=\"nombre\"\r\n                                name=\"nombre\"\r\n                                placeholder=\"Tu nombre\"\r\n                                value={nombre}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Confirmar Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"confirmar\"\r\n                                placeholder=\"Repite tu Password\"\r\n                                value={confirmar}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Registrarme\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'Login'} className=\"enlace-cuenta\">\r\n                       Volver a Iniciar Sesion\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default NuevaCuenta;"]},"metadata":{},"sourceType":"module"}